services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '${KAFKA_PORT:?error}:${KAFKA_PORT:?error}'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT:?error},CONTROLLER://:${KAFKA_CONTROLLER_PORT:?error}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:${KAFKA_CONTROLLER_PORT:?error}
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  producer:
    ports:
      - '${PRODUCER_PORT:?error}:${PRODUCER_PORT:?error}'
    build:
      context: .
      args:
        - service=producer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_started
    environment:
      - kafkaURL=kafka:${KAFKA_PORT:?error}
      - topic=desegmentation-server
      - port=${PRODUCER_PORT:?error}
  consumer:
    ports:
      - '${CONSUMER_PORT:?error}:${CONSUMER_PORT:?error}'
    build:
      context: .
      args:
        - service=consumer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_started
    environment:
      - kafkaURL=kafka:${KAFKA_PORT:?error}
      - topic=desegmentation-server
      - port=${CONSUMER_PORT:?error}
      - applicationURL=${APPLICATION_URL:?error}
